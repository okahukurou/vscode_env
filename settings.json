{
  // basic settings
  "editor.fontSize": 12,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "files.trimTrailingWhitespace": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.renderWhitespace": "all",
  "files.insertFinalNewline": true,
  "editor.minimap.enabled": false,
  "editor.lineNumbers": "on",
  "search.searchOnType": true,
  // terminal
  "terminal.integrated.fontSize": 12,
  "terminal.integrated.cursorWidth": 1,
  "terminal.integrated.tabs.hideCondition": "never",
  "terminal.integrated.tabs.showActiveTerminal": "always",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.cursorStyle": "block",
  "terminal.integrated.cursorBlinking": false,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.enableMultiLinePasteWarning": false,
  // vim settings
  "vim.useSystemClipboard": true,
  "vim.foldfix": true,
  "vim.hlsearch": true,
  "vim.visualstar": true,
  "vim.useCtrlKeys": true,
  "vim.incsearch": true,
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.sneakReplacesF": true,
  "vim.replaceWithRegister": true,
  "vim.easymotionKeys": "sdfghjklqwertyuiopzxcvbnm",
  "vim.cursorStylePerMode.replace": "underline",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 500,
  "vim.insertModeKeyBindings": [
    {
      "before": [
        "j",
        "j"
      ],
      "after": [
        "<Esc>"
      ]
    },
    {
      "before": [
        "<C-a>"
      ],
      "after": [
        "<C-o>",
        "^"
      ]
    },
    {
      "before": [
        "<C-e>"
      ],
      "after": [
        "<C-o>",
        "$"
      ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "vspacecode.space"
      ]
    },
    {
      "before": [
        "<ESC>"
      ],
      "after": [
        "<ESC>"
      ],
      "commands": [
        {
          "command": ":nohlsearch"
        }
      ]
    },
    {
      "before": [
        "x"
      ],
      "after": [
        "\"",
        "_",
        "x"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "after": [
        "g",
        "b"
      ]
    },
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<space>"
      ],
      "commands": [
        "vspacecode.space"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "after": [
        "g",
        "b"
      ]
    },
  ],
  "vspacecode.bindingOverrides": [
    {
      "keys": " ",
      "name": "Easy motion",
      "type": "bindings",
      "bindings": [
        {
          "key": "s",
          "name": "Search character",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "s"
            ]
          }
        },
        {
          "key": "j",
          "name": "Start of line backwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "j"
            ]
          }
        },
        {
          "key": "k",
          "name": "Start of line backwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "k"
            ]
          }
        },
        {
          "key": "l",
          "name": "Beginning & ending of word forwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "l"
            ]
          }
        },
        {
          "key": "h",
          "name": "Beginning & ending of word backwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "h"
            ]
          }
        },
        {
          "key": "f",
          "name": "Find character forwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "f"
            ]
          }
        },
        {
          "key": "F",
          "name": "Find character backwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "F"
            ]
          }
        },
        {
          "key": "t",
          "name": "Till character forwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "t"
            ]
          }
        },
        {
          "key": "T",
          "name": "Till character backwards",
          "type": "command",
          "command": "vim.remap",
          "args": {
            "after": [
              "<leader>",
              "<leader>",
              "T"
            ]
          }
        }
      ]
    },
    {
      "keys": "g",
      "name": "Git",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Open changes",
          "type": "command",
          "command": "git.openChange"
        },
        {
          "key": "o",
          "name": "Open files",
          "type": "command",
          "command": "git.openFile"
        },
        {
          "key": "w",
          "name": "Focus other side",
          "type": "command",
          "command": "workbench.action.compareEditor.focusOtherSide"
        },
        {
          "key": "n",
          "name": "Next changes",
          "type": "command",
          "command": "workbench.action.compareEditor.nextChange"
        },
        {
          "key": "p",
          "name": "Previous changes",
          "type": "command",
          "command": "workbench.action.compareEditor.previousChange"
        },
        {
          "key": "a",
          "name": "Stage selected range",
          "type": "command",
          "command": "git.stageSelectedRanges"
        },
        {
          "key": "u",
          "name": "Unstage selected range",
          "type": "command",
          "command": "git.unstageSelectedRanges"
        },
        {
          "key": "r",
          "name": "Revert selected range",
          "type": "command",
          "command": "git.revertSelectedRanges"
        },
        {
          "key": "v",
          "name": "Git graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "m",
          "name": "Magit dispatch",
          "type": "command",
          "command": "magit.dispatch"
        },
        {
          "key": "s",
          "name": "Magit status",
          "type": "command",
          "command": "magit.status"
        }
      ]
    },
    {
      "keys": "p",
      "name": "Project",
      "type": "bindings",
      "bindings": [
        {
          "key": "o",
          "name": "Open project",
          "type": "command",
          "command": "projectManager.listProjects"
        },
        {
          "key": "O",
          "name": "Open project with new window",
          "type": "command",
          "command": "projectManager.listProjectsNewWindow"
        },
        {
          "key": "s",
          "name": "Save project",
          "type": "command",
          "command": "projectManager.saveProject"
        },
        {
          "key": "e",
          "name": "Edit projects",
          "type": "command",
          "command": "projectManager.editProjects"
        }
      ]
    }
  ],
  // magit
  "magit.display-buffer-function": "same-column",
  // settings for vim
  "workbench.editor.labelFormat": "short",
  "workbench.editor.revealIfOpen": true,
  "workbench.editor.showIcons": false,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.tabSizing": "shrink",
  "workbench.editor.pinnedTabSizing": "shrink",
  "workbench.editor.tabCloseButton": "off",
  "workbench.startupEditor": "none",
  "workbench.editor.openPositioning": "first",
  "workbench.list.automaticKeyboardNavigation": false,
  "explorer.openEditors.visible": 0,
  "workbench.editor.showTabs": true,
  "workbench.editor.enablePreview": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 5,
  // other my settings
  "editor.bracketPairColorization.enabled": true,
  "workbench.colorTheme": "GitHub Dark Default",
  "editor.wordWrap": "off",
  "search.useIgnoreFiles": false,
  "editor.formatOnType": true,
  "editor.formatOnSave": true,
  "editor.glyphMargin": false,
  "editor.cursorSurroundingLines": 5,
  "git.pruneOnFetch": true,
  "git.mergeEditor": true,
  "git.showActionButton": {
    "commit": false,
    "publish": false,
    "sync": false
  },
  "git-graph.referenceLabels.combineLocalAndRemoteBranchLabels": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "breadcrumbs.enabled": true,
  "debug.inlineValues": "auto",
  "explorer.confirmDragAndDrop": false,
  // indentRainbow
  "indentRainbow.colors": [
    "rgba(255,0,0,0.5)",
    "rgba(255,165,0,0.5)",
    "rgba(255,255,0,0.5)",
    "rgba(0,128,0,0.5)",
    "rgba(0,255,255,0.5)",
    "rgba(0,0,255,0.5)",
    "rgba(128,0,128,0.5)"
  ],
  "indentRainbow.errorColor": "rgba(255,255,255,0.5)",
  "indentRainbow.indicatorStyle": "light",
  "indentRainbow.ignoreErrorLanguages": [
    "markdown",
    "python"
  ],
  // vscode icons
  "workbench.iconTheme": "vscode-icons",
  "vsicons.dontShowNewVersionMessage": true,
  // rest-clinet
  "rest-client.previewOption": "exchange",
  "rest-client.logLevel": "warn",
  "rest-client.previewResponsePanelTakeFocus": false,
  "rest-client.previewResponseInUntitledDocument": true,
  "rest-client.requestNameAsResponseTabTitle": true,
  "rest-client.excludeHostsForProxy": [
    "localhost"
  ],
  // remote
  "remote.SSH.enableAgentForwarding": false,
  "remote.SSH.enableDynamicForwarding": false,
  "remote.SSH.remotePlatform": {},
  "remote.SSH.connectTimeout": 120,
  "remote.SSH.useLocalServer": "false",
  // yaml
  "[yaml,yml]": {
    "editor.tabSize": 2,
    "editor.autoIndent": "keep",
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "yaml.completion": false,
  "yaml.format.bracketSpacing": false,
  // markdown
  "markdownlint.config": {
    "MD13": false,
    "MD14": false
  },
  "markdown.extension.orderedList.marker": "one",
  "markdown.extension.orderedList.autoRenumber": false,
  "markdown.extension.syntax.decorations": false,
  "markdown.extension.tableFormatter.enabled": false,
  // python
  "[python]": {
    "editor.tabSize": 4,
    "editor.wordBasedSuggestions": false,
    "editor.rulers": [
      {
        "column": 80,
        "color": "#552355"
      }
    ]
  },
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": true,
  "python.formatting.provider": "autopep8",
  // "python.linting.flake8Args": [
  //   "--ignore=W503"
  // ],
  // "python.formatting.autopep8Args": [
  //   "--aggressive",
  //   "--aggressive",
  //   "--ignore=E402"
  // ],
  "python.languageServer": "Pylance",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.autoImportCompletions": false,
  // drawio
  "hediet.vscode-drawio.theme": "dark",
  // vs-kubernetes
  "vs-kubernetes": {
    "vs-kubernetes.crd-code-completion": "disabled"
  },
  // delays
  "editor.quickSuggestionsDelay": 600,
  "indentRainbow.updateDelay": 800,
  "cSpell.spellCheckDelayMs": 200,
  // associations
  "files.associations": {
    "Dockerfile*": "dockerfile",
    "*.json": "jinja-json"
  },
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "files.watcherExclude": {
    "**/venv/**": true,
    "**/__pycache__/**": true,
    "**/.mypy_cache/**": true,
    "**/*egg-info/**": true
  }
}
