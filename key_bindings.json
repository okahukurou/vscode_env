[
  // window control
  {
    "key": "ctrl+w w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w ctrl+x",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w shift+c",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+w o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w ctrl+o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w shift+l",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+w shift+h",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.focusPreviousGroup"
  },
  // tab
  {
    "key": "ctrl+w n",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+w ctrl+n",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+w p",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+w ctrl+p",
    "command": "workbench.action.previousEditorInGroup"
  },
  // switch terminal
  {
    "key": "ctrl+w j",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  // split window
  {
    "key": "ctrl+w s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+w ctrl+s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w ctrl+v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+w shift+v",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+w shift+s",
    "command": "workbench.action.splitEditorUp"
  },
  // resize window
  {
    "key": "ctrl+w m",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+w ctrl+m",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+w [Minus]",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+w shift+oem_plus",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+w shift+[Minus]",
    "command": "workbench.action.evenEditorWidths"
  },
  // other ctrl+w
  {
    "key": "ctrl+w [BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+w ctrl+[BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+w shift+p",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+w shift+p",
    "command": "openapi.preview",
    "when": "editorTextFocus && editorLangId == 'yaml' && !openapiErrors"
  },
  {
    "key": "ctrl+w f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // switch window
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.switchWindow"
  },
  // vim control
  {
    "key": "ctrl+h",
    "command": "extension.vim_left",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "extension.vim_right",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "extension.vim_up",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "extension.vim_down",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteRight",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "cmd+f",
    "command": "vim.remap",
    "args": {
      "after": [
        "/"
      ]
    },
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "j",
    "command": "editor.action.selectNextStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  {
    "key": "k",
    "command": "editor.action.selectPreviousStickyScrollLine",
    "when": "stickyScrollFocused"
  },
  // compare editor
  {
    "key": "ctrl+n",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.compareEditor.focusOtherSide",
    "when": "textCompareEditorActive"
  },
  {
    "key": "tab",
    "command": "workbench.action.compareEditor.focusOtherSide",
    "when": "textCompareEditorActive"
  },
  // sidebar control
  {
    "key": "ctrl+t",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.view.search.focus"
  },
  {
    "key": "ctrl+l",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusAuxiliaryBar",
        "workbench.action.focusAuxiliaryBar",
      ]
    },
    "when": "!sideBarFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+h",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.focusSideBar",
        "workbench.action.focusSideBar",
      ]
    },
    "when": "!auxiliaryBarFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.previousSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.nextSideBarView",
    "when": "sideBarFocus"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  // explorer control
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // scm control
  // {
  //   "key": "s",
  //   "command": "git.stage",
  //   "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  // },
  // {
  //   "key": "u",
  //   "command": "git.unstage",
  //   "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  // },
  // {
  //   "key": "x",
  //   "command": "git.clean",
  //   "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  // },
  // enter (execute, insert line)
  {
    "key": "ctrl+enter",
    "command": "workbench.action.terminal.runSelectedText"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  // terminal window/pane control
  {
    "key": "ctrl+g n",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusNext",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+n",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusNext",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g p",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusPrevious",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g p",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+p",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusPrevious",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+p",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g l",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusNextPane",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+l",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusNextPane",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g h",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusPreviousPane",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+h",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusPreviousPane",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g s",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.split",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g s",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+s",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.split",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+s",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g c",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.new",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g c",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+c",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.new",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+c",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g x",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+x",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ,",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g ctrl+,",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g 1",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g 1",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g 2",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g 2",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g 3",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g 3",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g 4",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g 4",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+g 5",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "workbench.action.terminal.focusAtIndex1",
        "workbench.action.focusActiveEditorGroup",
      ]
    },
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+g 5",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "terminalFocus"
  },
  // other terminal control
  {
    "key": "ctrl+g [",
    "command": "extension.terminalCapture.runCapture",
    "when": "terminalProcessSupported"
  },
  {
    "key": "ctrl+g ctrl+[",
    "command": "extension.terminalCapture.runCapture",
    "when": "terminalProcessSupported"
  },
  {
    "key": "ctrl+g m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+g ctrl+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u0012"
    },
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // task
  {
    "key": "ctrl+g g",
    "command": "workbench.action.tasks.runTask",
    "args": "lazygit"
  },
  {
    "key": "ctrl+g ctrl+g",
    "command": "workbench.action.tasks.runTask",
    "args": "lazygit"
  },
  // ctrl+jk
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "ctrl+j",
    "command": "search.action.focusSearchList",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+k",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  // tab
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  // exchange focus of tab and editorgroup (for mac)
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  // cancel some key shortcuts
  {
    "key": "tab",
    "command": "-tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && vim.mode == 'Insert'"
  },
  {
    "key": "tab",
    "command": "markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  // Remove unnecessary ctrl+k bindings
  {
    "key": "ctrl+k",
    "command": "-deleteAllRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+m",
    "command": "-editor.foldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+d",
    "command": "-editor.action.formatDocument"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "-insertSnippet"
  },
  // rest client
  {
    "key": "ctrl+enter",
    "command": "rest-client.request",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  // VSpaceCode
  {
    "key": "space",
    "command": "vspacecode.space",
    "when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
  },
  {
    "key": "space",
    "command": "vspacecode.space",
    "when": "sideBarFocus && !inputFocus && !whichkeyActive"
  },
  {
    "key": "shift+space",
    "command": "vspacecode.space",
    "when": "terminalFocus"
  },
  // testing
  {
    "key": "escape",
    "command": "editor.closeTestPeek",
    "when": "testing.isPeekVisible"
  },
  // only for windows
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor",
  },
  {
    "key": "alt+j",
    "command": "workbench.action.togglePanel",
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel",
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "alt+0",
    "command": "workbench.action.focusSideBar",
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar",
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
  },
  {
    "key": "shift+alt+m",
    "command": "workbench.action.problems.focus",
  },
  {
    "key": "ctrl+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+alt+oem_plus",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "alt+oem_minus",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "ctrl+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+z",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
]
