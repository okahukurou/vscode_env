[
  // window control
  {
    "key": "ctrl+w w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w c",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w ctrl+c",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w shift+c",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+w o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w ctrl+o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w shift+l",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+w shift+h",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.focusPreviousGroup"
  },
  // switch terminal
  {
    "key": "ctrl+w j",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w ctrl+j",
    "command": "workbench.action.terminal.focus",
    "when": "editorFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  // split window
  {
    "key": "ctrl+w s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+w ctrl+s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w ctrl+v",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+w shift+v",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+w shift+s",
    "command": "workbench.action.splitEditorUp"
  },
  // resize window
  {
    "key": "ctrl+w m",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+w ctrl+m",
    "command": "workbench.action.toggleEditorWidths"
  },
  {
    "key": "ctrl+w [Minus]",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+w shift+oem_plus",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+w shift+[Minus]",
    "command": "workbench.action.evenEditorWidths"
  },
  // other ctrl+w
  {
    "key": "ctrl+w [BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+w ctrl+[BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+w shift+p",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+w shift+p",
    "command": "openapi.preview",
    "when": "editorTextFocus && editorLangId == 'yaml' && !openapiErrors"
  },
  {
    "key": "ctrl+w n",
    "command": "notifications.focusToasts"
  },
  {
    "key": "ctrl+w f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // switch window
  {
    "key": "ctrl+w",
    "command": "-workbench.action.switchWindow"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.switchWindow"
  },
  // vim control
  {
    "key": "ctrl+h",
    "command": "extension.vim_left",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+l",
    "command": "extension.vim_right",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+k",
    "command": "extension.vim_up",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+j",
    "command": "extension.vim_down",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteRight",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  // compare editor
  {
    "key": "ctrl+n",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorActive"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.compareEditor.focusOtherSide",
    "when": "textCompareEditorActive"
  },
  // sidebar control
  {
    "key": "ctrl+h",
    "command": "workbench.explorer.fileView.focus"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.view.scm"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.view.search.focus"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+[BracketLeft]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+[BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "cmd+h",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.toggleAuxiliaryBar",
    "when": "vim.mode != 'SearchInProgressMode' && vim.mode != 'Insert'"
  },
  // explorer control
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "Y",
    "command": "copyRelativeFilePath",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "D",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "f",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  // scm control
  {
    "key": "s",
    "command": "git.stage",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  },
  {
    "key": "u",
    "command": "git.unstage",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  },
  {
    "key": "x",
    "command": "git.clean",
    "when": "sideBarFocus && activeViewlet == 'workbench.view.scm' && !textInputFocus"
  },
  // magit
  {
    "key": "g g",
    "command": "cursorTop",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "g r",
    "command": "magit.refresh",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "tab",
    "command": "extension.vim_tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
  },
  {
    "key": "tab",
    "command": "-extension.vim_tab",
    "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "x",
    "command": "magit.discard-at-point",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "k",
    "command": "-magit.discard-at-point"
  },
  {
    "key": "v",
    "command": "-magit.reverse-at-point"
  },
  {
    "key": "shift+-",
    "command": "magit.reverting",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+v",
    "command": "-magit.reverting"
  },
  {
    "key": "x",
    "command": "-magit.reset-mixed"
  },
  {
    "key": "ctrl+u x",
    "command": "-magit.reset-hard"
  },
  {
    "key": "l",
    "command": "-magit.logging"
  },
  {
    "key": "shift+l",
    "command": "magit.logging",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  {
    "key": "shift+c",
    "command": "magit.status",
    "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
  },
  // enter (execute, insert line)
  {
    "key": "ctrl+enter",
    "command": "workbench.action.terminal.runSelectedText"
  },
  {
    "key": "ctrl+enter",
    "command": "python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  // terminal control
  {
    "key": "cmd+i [BracketLeft]",
    "command": "terminal.focus"
  },
  {
    "key": "cmd+i l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i s",
    "command": "workbench.action.terminal.split",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i c",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported"
  },
  {
    "key": "cmd+i d",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+i r",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "cmd+i 1",
    "command": "workbench.action.terminal.focusAtIndex1"
  },
  {
    "key": "cmd+i 2",
    "command": "workbench.action.terminal.focusAtIndex2"
  },
  {
    "key": "cmd+i 3",
    "command": "workbench.action.terminal.focusAtIndex3"
  },
  {
    "key": "cmd+i 4",
    "command": "workbench.action.terminal.focusAtIndex4"
  },
  {
    "key": "cmd+i 5",
    "command": "workbench.action.terminal.focusAtIndex5"
  },
  {
    "key": "cmd+i 6",
    "command": "workbench.action.terminal.focusAtIndex6"
  },
  {
    "key": "cmd+i 7",
    "command": "workbench.action.terminal.focusAtIndex7"
  },
  {
    "key": "cmd+i 8",
    "command": "workbench.action.terminal.focusAtIndex8"
  },
  {
    "key": "cmd+i 9",
    "command": "workbench.action.terminal.focusAtIndex9"
  },
  {
    "key": "cmd+i e",
    "command": "workbench.action.terminal.moveToEditor"
  },
  {
    "key": "cmd+i shift+e",
    "command": "workbench.action.terminal.moveToTerminalPanel"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u0012"
    },
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+.",
    "command": "workbench.action.terminal.scrollToBottom",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // terminal alt (skip if windows)
  {
    "key": "alt+y",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+y",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+e",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.selectToPreviousLine",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.terminal.selectToNextLine",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+k",
    "command": "workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+j",
    "command": "workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+y",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+y",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+alt+e",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocus && terminalProcessSupported"
  },
  // ctrl+jk
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "notifications.focusPreviousToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "problems.action.focusProblemsFromFilter",
    "when": "problemsFilterFocus"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "ctrl+k",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor || searchViewletFocus"
  },
  // ctrl+ey
  {
    "key": "ctrl+e",
    "command": "list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  // tab
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  // exchange focus of tab and editorgroup (for mac)
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+5",
    "command": "-workbench.action.openEditorAtIndex5"
  },
  {
    "key": "ctrl+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "cmd+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+4",
    "command": "workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "cmd+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "ctrl+5",
    "command": "workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "cmd+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  // cancel some key shortcuts
  {
    "key": "tab",
    "command": "-tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "tab",
    "command": "tab",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && vim.mode == 'Insert'"
  },
  {
    "key": "tab",
    "command": "markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "cmd+f",
    "command": "vim.remap",
    "args": {
      "after": [
        "/"
      ]
    },
    "when": "editorFocus || editorIsOpen"
  },
  // rest client
  {
    "key": "ctrl+enter",
    "command": "rest-client.request",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  // VSpaceCode
  {
    "key": "space",
    "command": "vspacecode.space",
    "when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
  },
  {
    "key": "space",
    "command": "vspacecode.space",
    "when": "sideBarFocus && !inputFocus && !whichkeyActive"
  },
  // only for windows
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor",
  },
  {
    "key": "alt+j",
    "command": "workbench.action.togglePanel",
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel",
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "alt+0",
    "command": "workbench.action.focusSideBar",
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar",
  },
  {
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems",
  },
  {
    "key": "shift+alt+m",
    "command": "workbench.action.problems.focus",
  },
  {
    "key": "ctrl+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "shift+alt+oem_plus",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "ctrl+shift+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "alt+oem_minus",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "ctrl+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "shift+alt+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "shift+alt+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+shift+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+z",
    "command": "editor.action.toggleWordWrap"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "ctrl+f",
    "command": "-extension.vim_ctrl+f",
    "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
  },
]
