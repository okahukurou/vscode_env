[
  // window control
  {
    "key": "ctrl+w w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+w w",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus || panelFocus"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus || panelFocus"
  },
  {
    "key": "ctrl+w c",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w ctrl+c",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w ctrl+o",
    "command": "workbench.action.closeOtherEditors"
  },
  {
    "key": "ctrl+w shift+c",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "ctrl+w shift+l",
    "command": "workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+w shift+h",
    "command": "workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+w ctrl+l",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+w ctrl+h",
    "command": "workbench.action.focusPreviousGroup"
  },
  {
    "key": "ctrl+w oem_minus",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+w shift+oem_plus",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+w shift+oem_minus",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+w shift+p",
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  // vim control
  {
    "key": "ctrl+h",
    "command": "extension.vim_left",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+l",
    "command": "extension.vim_right",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+k",
    "command": "extension.vim_up",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+j",
    "command": "extension.vim_down",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+backspace",
    "command": "deleteRight",
    "when": "editorFocus && vim.mode == 'Insert'"
  },
  // sidebar control
  {
    "key": "cmd+8",
    "command": "workbench.action.previousSideBarView"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.nextSideBarView"
  },
  // enter (execute, insert line)
  {
    "key": "ctrl+enter",
    "command": "workbench.action.terminal.runSelectedText"
  },
  {
    "key": "ctrl+enter",
    "command": "python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "shift+enter",
    "command": "-python.execSelectionInTerminal",
    "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
  },
  {
    "key": "cmd+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  // F12
  {
    "key": "ctrl+w f12",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  // terminal control
  {
    "key": "cmd+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "shift+cmd+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+oem_3",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  // ctrl+jk
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.statusBar.focusNext",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.statusBar.focusPrevious",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFromSearch",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "notifications.focusNextToast",
    "when": "notificationFocus && notificationToastsVisible"
  },
  // ctrl+ey
  {
    "key": "ctrl+e",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+y",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+e",
    "command": "list.scrollDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "list.scrollUp",
    "when": "listFocus && !inputFocus"
  },
  // tab
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
]
